package com.logic;

import com.entities.dto.Component;
import com.enumerations.DBURL;
import java.io.FileOutputStream;
import java.util.Date;

import com.itextpdf.text.Anchor;
import com.itextpdf.text.BadElementException;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chapter;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.List;
import com.itextpdf.text.ListItem;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Section;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

public class ToPDF
{

    LogicFacade logic;
    
    private static String FILE = "src/main/webapp/pdf/Bill.pdf";
    private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
            Font.BOLD);
    private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.BOLD);
    private static Font verySmall = new Font(Font.FontFamily.TIMES_ROMAN, 11,
            Font.NORMAL);

    
//    public void generatePDF(Map<Component, Integer> bom, String author)
    public static void main(String[] args)
    {
        Document document = new Document();
        Map<Component, Integer> bom = new HashMap();
        String title = "Stykliste";
        String author = "Brandstrup";
        java.util.List<String> stringList = tempFacade(bom);
        
        java.util.List<String> tempList = new ArrayList();
        
        
        
        try
        {
            PdfWriter.getInstance(document, new FileOutputStream(FILE));
            document.open();
            addMetaData(document, title);
            addBill(document, author, tempList);
            document.close();
        }
        catch (FileNotFoundException | DocumentException ex)
        {
            
        }
    }

    public static java.util.List<String> tempFacade(Map<Component, Integer> bom)
    {
        return logic.stringExtractor(bom);
    }
    
    private static void addBill(Document document, String author, java.util.List<String> stringList) throws DocumentException
    {
        Paragraph para1 = new Paragraph();
        addEmptyLine(para1, 1);
        para1.add(new Paragraph("Stykliste for Carport", catFont));
        addEmptyLine(para1, 1);
        para1.add(new Paragraph("Generated by: " + author + ", " + new Date(), smallBold));
        addEmptyLine(para1, 4);
        
        generateTable(para1, stringList);
        
        document.add(para1);
    }
    
    private static void generateTable(Paragraph para, java.util.List<String> stringList) throws BadElementException, DocumentException
    {
        if(stringList.size() % 7 > 0)
        {
            throw new IllegalArgumentException("Stringlist has illegal size!");
        }
        PdfPTable table = new PdfPTable(7);
        
        table.setWidthPercentage(100);
        float[] ws = new float[7];
        ws[0] = 25f;
        ws[1] = 25f;
        ws[2] = 10f;
        ws[3] = 10f;
        ws[4] = 10f;
        ws[5] = 10f;
        ws[6] = 10f;
        table.setWidths(ws);
        
        PdfPCell cell;
        
        cell = new PdfPCell(new Phrase("Beskrivelse", smallBold));
        cell.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(cell);

        cell = new PdfPCell(new Phrase("Hjælpetext", smallBold));
        cell.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(cell);

        cell = new PdfPCell(new Phrase("Længde", smallBold));
        cell.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(cell);
        
        cell = new PdfPCell(new Phrase("Bredde", smallBold));
        cell.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(cell);
        
        cell = new PdfPCell(new Phrase("Højde", smallBold));
        cell.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(cell);
        
        cell = new PdfPCell(new Phrase("Pris", smallBold));
        cell.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(cell);
        
        cell = new PdfPCell(new Phrase("Antal", smallBold));
        cell.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(cell);
        
        table.setHeaderRows(1);
        
        
        String[] strings = new String[7];
        
        cell = new PdfPCell(new Phrase(strings[0], verySmall));
        table.addCell(cell);
        
        table.addCell(new Phrase("aaaa aaaaaaaaaaa aaaaaaaaaa aaaaaaaaaaa", verySmall));
        table.addCell(new Phrase("aaa aaaaaaaaaaaaaaaaaa aaaaaaaaaaaa aaa", verySmall));
        table.addCell(new Phrase("1,255m", verySmall));
        table.addCell(new Phrase("1,255m", verySmall));
        table.addCell(new Phrase("1,255m", verySmall));
        table.addCell(new Phrase("45,45kr.", verySmall));
        table.addCell(new Phrase("10", verySmall));
        
        table.addCell("2.1");
        table.addCell("2.2");
        table.addCell("2.3");
        table.addCell("2.4");
        table.addCell("2.5");
        table.addCell("2.6");
        table.addCell("2.7");
        
        para.add(table);
    }
    
    
    
//    public static void main(String[] args)
//    {
//        try
//        {
//            Document document = new Document();
//            PdfWriter.getInstance(document, new FileOutputStream(FILE));
//            document.open();
//            addMetaData(document, "ForsøgsTekst");
//            addTitlePage(document);
//            addContent(document);
//            document.close();
//        } catch (Exception e)
//        {
//            e.printStackTrace();
//        }
//    }
    
    // iText allows to add metadata to the PDF which can be viewed in your Adobe
    // Reader
    // under File -> Properties
    private static void addMetaData(Document document, String text)
    {
        document.addTitle(text);
        document.addSubject("Stykliste");
        document.addKeywords("Java, PDF, iText");
        document.addAuthor("The Martins");
        document.addCreator("The Martins");
    }
    
    private static void addEmptyLine(Paragraph paragraph, int number)
    {
        for (int i = 0; i < number; i++)
        {
            paragraph.add(new Paragraph(" "));
        }
    }

    public ToPDF()
    {
        this.logic = new LogicFacade(DBURL.TEST);
    }
}
